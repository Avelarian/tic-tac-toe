 // [0][0], [0][1], [0][2] // Array.get(i) (i+ 1) (i+2)
    // [1][0], [1][1], [1][2]
    // [2][0], [2][1], [2][2]
    // [0][0], [1][0], [2][0]
    // [0][1], [1][1], [2][1]
    // [0][2], [1][2], [2][2]
    // [0][0], [1][1], [2][2]
    {
      // Trying to improve this...
      ...state,
      status:
        state.fields
        ->Array.getBy(rowContent => {
            rowContent == Array.make(3, Cross)
            || rowContent == Array.make(3, Circle)
          })
        != None
          ? Finished
          : state.fields->switchArray(0)->Array.get(0)
            == state.fields->switchArray(1)->Array.get(0)
            && state.fields->switchArray(0)->Array.get(0)
            == state.fields->switchArray(2)->Array.get(0)
            && (
              state.fields->switchArray(0)->Array.get(0) == Some(Cross)
              || state.fields->switchArray(0)->Array.get(0) == Some(Circle)
            )
              ? Finished
              : state.fields->switchArray(0)->Array.get(1)
                == state.fields->switchArray(1)->Array.get(1)
                && state.fields->switchArray(0)->Array.get(1)
                == state.fields->switchArray(2)->Array.get(1)
                && (
                  state.fields->switchArray(0)->Array.get(1) == Some(Cross)
                  || state.fields->switchArray(0)->Array.get(1)
                  == Some(Circle)
                )
                  ? Finished
                  : state.fields->switchArray(0)->Array.get(2)
                    == state.fields->switchArray(1)->Array.get(2)
                    && state.fields->switchArray(0)->Array.get(2)
                    == state.fields->switchArray(2)->Array.get(2)
                    && (
                      state.fields->switchArray(0)->Array.get(2)
                      == Some(Cross)
                      || state.fields->switchArray(0)->Array.get(2)
                      == Some(Circle)
                    )
                      ? Finished
                      : state.fields->switchArray(0)->Array.get(0)
                        == state.fields->switchArray(1)->Array.get(1)
                        && state.fields->switchArray(0)->Array.get(0)
                        == state.fields->switchArray(2)->Array.get(2)
                        && (
                          state.fields->switchArray(0)->Array.get(0)
                          == Some(Cross)
                          || state.fields->switchArray(0)->Array.get(0)
                          == Some(Circle)
                        )
                          ? Finished
                          : state.fields->switchArray(0)->Array.get(2)
                            == state.fields->switchArray(1)->Array.get(1)
                            && state.fields->switchArray(2)->Array.get(0)
                            == state.fields->switchArray(1)->Array.get(1)
                            && (
                              state.fields->switchArray(0)->Array.get(2)
                              == Some(Cross)
                              || state.fields->switchArray(0)->Array.get(2)
                              == Some(Circle)
                            )
                              ? Finished : Active,